#!/usr/bin/env bash

# Monitor a set of AAD2 docking replicas and analyze the results when finished.
# Should be run from the main working directory (above the replicas).

Monitor_Log="monitor.log"

source ad2config

if [ -z "${Status_Check_Wait}" ] ; then
	Status_Check_Wait="5"
fi
if [ -z "${Status_Check_Timeout}" ] ; then
	Status_Check_Timeout="7200" ## Two hours in seconds
fi

echo """Monitor log begun on $(date)
The wait between status checks, in seconds, is: ${Status_Check_Wait}
The monitor will time out after, in seconds: ${Status_Check_Timeout}""" > ${Monitor_Log} 2>&1

#### Sample return data when the jobs are all complete
## $ check_AD_status
## AD2 status requested on Mon Mar  3 06:50:28 AM EST 2025 for file /home/lachele/Work/Software/AD_update/AAD2_Docker/tests/temp_test.
## Top-level directory check says: The directory contents look ok.
## Top-level input files check says: The files look ok.
## The replica directory check says: The replica directories look ok.
## The number of completed replicas is: 5
## The overall job check says: Everything appears to have completed.
## $ echo $?
## 0
####

evaluate_status() {

	the_response="$(check_AD_status)"
	the_returnval="$?"

	if [ "${the_returnval}" != "0" ] ; then
		echo "FATAL: the return value from check_AD_status was non-zero. Exiting."  >> ${Monitor_Log} 2>&1 
		echo "       The return value was: ${the_returnval}" >> ${Monitor_Log} 2>&1 
		echo "       check_AD_status returned the following information:" >> ${Monitor_Log} 2>&1 
		echo "${the_response}" >> ${Monitor_Log} 2>&1 
		exit ${the_returnval}
	fi

	#echo "${the_response}" >> ${Monitor_Log} 2>&1


	job_is_done="False"

	while IFS= read -r line; do
		#echo "$line"
		if [[ "${line}" == *"The number of completed replicas is:"* ]] ; then
			set -- ${line}
			jobs_completed="${7}"
		fi
	done <<< "${the_response}"


        if [ "${Number_of_Replicas}" == "${jobs_completed}" ] ; then
		job_is_done="True" 
        fi

	export jobs_completed job_is_done
}

done_checking="False"
wait_so_far="0"
while [ "${done_checking}" == "False" ] ; do
	evaluate_status  >> ${Monitor_Log} 2>&1 
	the_returnval="$?"
	if [ "${the_returnval}" != "0" ] ; then
		echo "FATAL: the return value from evaluate_status was non-zero. Exiting."  >> ${Monitor_Log} 2>&1 
		echo "       The return value was: ${the_returnval}" >> ${Monitor_Log} 2>&1 
		exit ${the_returnval}
	fi
	#echo "job is done = ${job_is_done}" >> ${Monitor_Log} 2>&1 
	if [ "${job_is_done}" == "True" ] ; then
		echo "AAD2 replicas all finished on $(date)" >> ${Monitor_Log} 2>&1 
		done_checking="True"
	else
		echo "${jobs_completed} have completed as of $(date)" >> ${Monitor_Log} 2>&1 
		sleep ${Status_Check_Wait}
	fi
   
	wait_so_far="$((wait_so_far+Status_Check_Wait))"
	#echo "wait_so_far = ${wait_so_far} " >> ${Monitor_Log} 2>&1 
	if [ "${wait_so_far}" -ge "${Status_Check_Timeout}" ] ; then
		done_checking="True"
		echo "Monitoring timed out after ${Status_Check_Timeout} seconds." >> ${Monitor_Log} 2>&1
	fi
done

## Run the Analysis
echo "About to run AD_Analyza" >> ${Monitor_Log} 2>&1 

export WD="$(pwd)"
if [ ! -z "${AD2_Analysis_Batch_Script}" ] ; then
	echo "An analysis batch script is specified. Attempting to submit analysis job."  >> ${Monitor_Log} 2>&1 
	${AD2_Analysis_Batch_Script}    >> ${Monitor_Log} 2>&1 
	the_returnval="$?"

	if [ "${the_returnval}" != "0" ] ; then
		echo "FATAL: the return value from AD_Analyze was non-zero. Exiting." >> ${Monitor_Log} 2>&1 
		echo "       The return value was: ${the_returnval}" >> ${Monitor_Log} 2>&1 
		exit ${the_returnval}
	fi

elif [ "${Use_Docker}" == "True" ] ; then
	echo "Use Docker is set to true. Attempting to run analysis in a docker container." >> ${Monitor_Log} 2>&1 
	source ad2dockerconfig || echo "FATAL: Problem sourcing ad2dockerconfig but Use_Docker is True. Exiting" >> ${Monitor_Log} 2>&1 
	if [ ! -d "${AAD2_DOCKER_HOME}" ] ; then
		echo "FATAL: AAD2_DOCKER_HOME is not a directory. Exiting." >> ${Monitor_Log} 2>&1 
		echo "       AAD2_DOCKER_HOME is set to: ${AAD2_DOCKER_HOME}" >> ${Monitor_Log} 2>&1 
		exit 1
	fi

	( cd ${AAD2_DOCKER_HOME} && export CONTAINER_NAME_PREFIX && bash bin/run_aad2_command.bash ${WD} AD_Analyze ) 
	the_returnval="$?"

	if [ "${the_returnval}" != "0" ] ; then
		echo "FATAL: the return value from AD_Analyze was non-zero. Exiting." >> ${Monitor_Log} 2>&1 
		echo "       The return value was: ${the_returnval}" >> ${Monitor_Log} 2>&1 
		exit ${the_returnval}
	fi
else
	echo "Assuming we are natively in the correct environment for AD_Analyze to run. Attempting." >> ${Monitor_Log} 2>&1 
	AD_Analyze ${WD}  >> ${Monitor_Log} 2>&1 
	the_returnval="$?"

	if [ "${the_returnval}" != "0" ] ; then
		echo "FATAL: the return value from AD_Analyze was non-zero. Exiting." >> ${Monitor_Log} 2>&1 
		echo "       The return value was: ${the_returnval}" >> ${Monitor_Log} 2>&1 
		exit ${the_returnval}
	fi
fi

cd ${WD}
if ! generate_AD_results_view ; then
	echo "There was a problem generating the default image." >> ${Monitor_Log} 2>&1
fi

echo "Analysis completed without errors."  >> ${Monitor_Log} 2>&1

echo "The monitoring script reports that the job completed on $(date)" >> ${Monitor_Log} 2>&1
