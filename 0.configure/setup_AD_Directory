#!/usr/bin/env bash

## Validate the contents of the working directory for Automated Antibody Docking

LOGF="ad2_setup.log"

WE_ARE_DONE_WHEN="""
When fully set up, the working directory should contain these things:

    - The antibody PDB file 

    - The glycan PDB file

    - The glycan ring atoms file called 'glycan_ring_atoms.txt'

    - An AD2 configuration file

    - A VC configuration file

"""

UGAGE="""
Usage:

        ${0} [working directory] 

	If the working directory is omitted, the current working directory will be used.

	The script doesn't do much more right now than give directions.
	
	Return:

	    - Indication of success or failure and more info written to a log file.

        Notes:

	    - The two PDB files do not have name restrictions. 
"""

Example_AD2_Config="""#!/usr/bin/env bash

## 
## ad2config - configuration for Automated Antibody Docking 2
## 

## 
## All variables except names of log files are unset by default. 
## 

## These are the defaults for the log files
#
Log_File=\"ad2.log\" # the overall log for the N replica(s), their setup and the output analysis
DOCKING_REPLICA_LOG_FILE=\"docking.log\" # set the name of the log output from vina-carb for each replica
DOCKING_REPLICA_JOB_LOG=\"ad2_job.log\"  # the log from AAD2 about an individual docking replica

## These variables must always be set
#
Antibody_File_Name=\"\" 
Glycan_File_Name=\"\" 
Glycan_Flexibility=\"\" 
#    Possible values:
#      \"Rigid\" - no flexibility
#      \"Partial\" - some parts are flexible
#      \"Flexible\" - all parts are flexible
Number_of_Replicas=\"\"  # An integer
AD2_Docking_CPUS=\"\"   # Number of cores to use
Computing_Mode=\"\" 
#    Possible values:
#      \"Local_Host_Serial\" - run all parts in serial, one at a time, on the local host
#      \"Batch\" - submit the replicas to a cluster
#          Note: if set to 'Batch', then  you need to specify other options. See below.
Use_Docker=\"\" 
#    Options: \"True\" or \"False\".  If 'True', then other settings are required.


AAD2_CLI_BIN_PATH=\"\"  # The path for AAD2 executables used outside a container

## This may be set if desired. Leave unset if unsure.
#
#AD2_Random_Seeds=(
#	[1]=\"112345\"
#	[2]=\"212345\"
#	[3]=\"312345\"
#	[4]=\"412345\"
#	[5]=\"512345\"
#) # Use this if you want deterministic behavior for proving repeatable results.
# Substitute your random number seeds.
# Ensure that the number of entries matches the Number_of_Replicas, above.


## For submitting parts of the scripts to a cluster
#
AD2_Docking_Batch_Script=\"\" # if you need to submit docking to a cluster
#   example: AD2_Docking_Batch_Script=\"submit_docking_to_slurm_with_docker.bash\"
AD2_Docking_Local_Script=\"\" # if you need to include/source another script in your docking dir
#   example: AD2_Docking_Local_Script=\"gwconfig\"

## These are required if Use_Docker is set to True
#
AAD2_DOCKER_HOME=\"\"
#
Image=\"\" 
#   Example: Image=\"antibody-docking:2025-02-14-00-54-blf\"  # check current name:tag

## These might be needed if Use_Docker is True
#
export AAD2_IMAGE_FILE_PATH=\"\"  # If you might need to load the image from a file

"""

Standard_Vina_Carb_Configuration="""
receptor = protein.pdbqt
ligand = ligand.pdbqt
center_x = 0.0
center_y = 0.0
center_z = 11.0
size_x = 32.0
size_y = 32.0
size_z = 36.0
energy_range = 10
num_modes = 20
chi_coeff=1
chi_cutoff=2
"""

if [ -z "${1}" ] ; then
	WORKDIR="$(pwd)"
elif [ ! -d "${1}" ] ; then
        echo "The supplied name must be a directory. Exiting with error."
	echo "The supplied name is: "
	echo "        ${1}  "
        exit 1
else
	WORKDIR="${1}"
fi
echo "Starting the AD2 setup log at: $(date)" > ${LOGF}
echo "Setting the working directory to: ${WORKDIR}" >> ${LOGF}
if [ ! -e "${WORKDIR}/ad2config" ] ; then
        echo "The supplied directory does not contain an ad2config file." >> ${LOGF}
	echo "Writing an example file to the directory." >> ${LOGF}
	echo "${Example_AD2_Config}" > ${WORKDIR}/ad2config.example
fi
if [ -e "vcconfig" ] ; then
	echo "Found existing vcconfig. Not clobbering it." >> ${LOGF}
else 
	echo "Generating a standard vcconfig." >> ${LOGF}
	echo "${Standard_Vina_Carb_Configuration}" > vcconfig
fi
echo """If you have set random number seeds, they will be put in place later in the process unless you
have already made the subdirectories and placed vcconfig files there. In that case, these scripts will
not overwrite them.
""" >> ${LOGF}
echo """Setup finished.

If there are files ending in .example in this directory, you need to fill the proper values 
into them and remove any values that are not relevant to you. Then, remove '.example' from 
the filenames. Don't forget to add all the needed files to the working directory.
""" >> ${LOGF}

echo "${WE_ARE_DONE_WHEN}" >> ${LOGF}
